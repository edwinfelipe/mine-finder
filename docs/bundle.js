(()=>{var e={737:e=>{e.exports=(e,o)=>e.row===o.row-1&&e.col===o.col-1||e.row===o.row&&e.col===o.col-1||e.row===o.row+1&&e.col===o.col-1||e.row===o.row-1&&e.col===o.col||e.row===o.row+1&&e.col===o.col||e.row===o.row-1&&e.col===o.col+1||e.row===o.row&&e.col===o.col+1||e.row===o.row+1&&e.col===o.col+1||e.row+1===o.row&&e.col+1===o.col||void 0},167:e=>{e.exports=(e,o)=>Math.floor(Math.random()*(e-o+1)+o)}},o={};function l(i){var t=o[i];if(void 0!==t)return t.exports;var s=o[i]={exports:{}};return e[i](s,s.exports,l),s.exports}(()=>{const e=l(167),o=l(737);let i,t,s,r,c={};const a=["#aaffaa","#ccffaa","#ffffaa","#ffccaa"];class n{constructor({rows:e,cols:o,mines:l}){this.rows=e,this.cols=o,this.matrix=[],this.mines=l||10,this.firstFlip=!0}generateBoard(){const l=[];this.matrix=[];for(let o=0;o<this.mines;o++){let i,t;do{i=e(this.rows-1,0),t=e(this.cols-1,0),l[o]={row:i,col:t}}while(l.filter((e=>e.row===i&&e.col===t)).length>1)}for(let e=0;e<this.rows;e++)for(let o=0;o<this.cols;o++){const i=new f({row:e,col:o,hasMine:!1});l.find((e=>e.row===i.row&&e.col===i.col))&&(i.hasMine=!0),this.matrix.push(i)}for(let e of l)this.matrix.filter((l=>o(l,e))).map((e=>e.nearMines+=1))}draw(e){e.strokeStyle="#FFFFFF";for(let{row:o,col:l,hasMine:i,isFaceUp:t,isMarked:s,nearMines:r}of this.matrix)e.beginPath(),e.fillStyle=t?r>0&&!i?a[r-1]:"#DDDDDD":"#BBBBBB",e.fillRect(l*blockSize,o*blockSize,blockSize,blockSize),e.strokeRect(l*blockSize,o*blockSize,blockSize,blockSize),e.fill(),e.stroke(),e.closePath(),t?i?(e.beginPath(),e.fillStyle="#000000",e.arc(l*blockSize+blockSize/2,o*blockSize+blockSize/2,8,0,2*Math.PI),e.fill(),e.closePath()):(e.beginPath(),e.fillStyle="#000000",e.font="bold 36px courier",e.textAlign="center",e.textBaseline="middle",e.fillText(r||"",l*blockSize+blockSize/2,o*blockSize+blockSize/2),e.fill(),e.closePath()):s&&(e.beginPath(),e.fillStyle="#000000",e.font="bold 36px courier",e.textAlign="center",e.textBaseline="middle",e.fillText("X",l*blockSize+blockSize/2,o*blockSize+blockSize/2),e.fill(),e.closePath())}getNears(e){return this.matrix.filter((o=>{let l=Math.abs(o.row-e.row),i=Math.abs(o.col-e.col);return!o.isFaceUp&&l<2&&i<2}))}flipCell({row:e,col:o}){if(this.matrix.filter((e=>!e.isFaceUp)).length===this.mines-1)return alert("You Win!!!!!"),this.generateBoard(),void(this.firstFlip=!0);let l=this.matrix.find((l=>l.row===e&&l.col===o)),i=this.getNears(l);if(0!==l.nearMines||l.hasMine)if(this.firstFlip){this.firstFlip=!1;do{this.generateBoard()}while(this.matrix.find((l=>e===l.row&&o===l.col&&(0!==l.nearMines||l.hasMine))));let l=this.matrix.find((l=>l.row===e&&l.col===o));this.flipCell(l)}else l.isFaceUp=!0;else{this.firstFlip=!1,l.isFaceUp=!0,i.map((e=>e.isFaceUp=!0));for(let e of i)0===e.nearMines&&this.flipCell(e)}}markCell({row:e,col:o}){let l=this.matrix.find((l=>l.row===e&&l.col===o));l.isFaceUp||(l.isMarked=!l.isMarked)}}class f{constructor({row:e,col:o,hasMine:l}){this.row=e,this.col=o,this.hasMine=l,this.isMarked=!1,this.isFaceUp=!1,this.nearMines=0}}s=document.getElementById("cv"),r=s.getContext("2d"),i=new class{constructor(e){this.options=e}draw(e){for(let o=0;o<this.options.length;o++){let l=this.options[o];e.beginPath(),e.fillStyle="#DDDDDD",e.fillRect(0,100*o,s.width,90),e.fill(),e.closePath(),e.beginPath(),e.font="bold 24px courier",e.fillStyle="black",e.fillText(l.name,24,100*o+40),e.fill(),e.closePath(),e.beginPath(),e.font="bold 16px courier",e.fillStyle="black",e.fillText(`${l.cols} X ${l.rows}`,24,100*o+64),e.fill(),e.closePath(),e.beginPath(),e.font="bold 14px courier",e.fillStyle="#666666",e.fillText(`${l.mines} Mines`,24,100*o+80),e.fill(),e.closePath()}}}([{name:"Easy",rows:8,cols:8,mines:10},{name:"Medium",rows:16,cols:16,mines:40},{name:"Hard",rows:16,cols:28,mines:99}]),function e(){window.requestAnimationFrame(e),t?t.draw(r):i&&i.draw(r)}(),s.addEventListener("click",(({clientX:e,clientY:o})=>{if(t){let l=Math.floor((o-s.offsetTop)/blockSize),i=Math.floor((e-s.offsetLeft)/blockSize);t.flipCell({row:l,col:i})}else{let e=Math.floor((o-s.offsetTop)/100);c=i.options[e],blockSize=s.width/c.cols,s.width=blockSize*c.cols,s.height=blockSize*c.rows,t=new n({rows:c.rows,cols:c.cols,mines:c.mines}),t.generateBoard()}})),s.addEventListener("contextmenu",(e=>{if(e.preventDefault(),t){let o=Math.floor((e.clientY-s.offsetTop)/blockSize),l=Math.floor((e.clientX-s.offsetLeft)/blockSize);t.markCell({row:o,col:l})}}))})()})();